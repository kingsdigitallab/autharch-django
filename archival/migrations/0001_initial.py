# Generated by Django 2.0.9 on 2018-10-09 21:23

from django.db import migrations, models
import django.db.models.deletion


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ('reversion', '0001_squashed_0004_auto_20160611_1202'),
        ('auth', '0009_alter_user_last_name_max_length'),
        ('jargon', '0003_publication'),
    ]

    operations = [
        migrations.CreateModel(
            name='Collection',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('repository', models.CharField(max_length=512)),
                ('repository_code', models.PositiveIntegerField()),
                ('archival_level', models.CharField(editable=False, max_length=32)),
                ('title', models.CharField(max_length=1024)),
                ('provenance', models.TextField(blank=True, null=True)),
                ('creation_dates', models.TextField(blank=True, null=True)),
                ('start_date', models.DateField()),
                ('end_date', models.DateField(blank=True, null=True)),
                ('description', models.TextField(blank=True, null=True)),
                ('notes', models.TextField(blank=True, null=True)),
                ('extent', models.TextField()),
                ('related_materials', models.TextField(blank=True, null=True)),
                ('rights_declaration', models.TextField()),
                ('administrative_history', models.TextField()),
                ('arrangement', models.TextField()),
            ],
            options={
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='File',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('repository', models.CharField(max_length=512)),
                ('repository_code', models.PositiveIntegerField()),
                ('archival_level', models.CharField(editable=False, max_length=32)),
                ('title', models.CharField(max_length=1024)),
                ('provenance', models.TextField(blank=True, null=True)),
                ('creation_dates', models.TextField(blank=True, null=True)),
                ('start_date', models.DateField()),
                ('end_date', models.DateField(blank=True, null=True)),
                ('description', models.TextField(blank=True, null=True)),
                ('notes', models.TextField(blank=True, null=True)),
                ('extent', models.TextField()),
                ('related_materials', models.TextField(blank=True, null=True)),
                ('rights_declaration', models.TextField()),
                ('physical_description', models.TextField(blank=True, null=True)),
                ('copyright_status', models.TextField()),
                ('publication_permission', models.TextField(blank=True, null=True)),
                ('whithheld', models.TextField(blank=True, null=True)),
                ('url', models.URLField(blank=True, null=True)),
            ],
            options={
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='Item',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('repository', models.CharField(max_length=512)),
                ('repository_code', models.PositiveIntegerField()),
                ('archival_level', models.CharField(editable=False, max_length=32)),
                ('title', models.CharField(max_length=1024)),
                ('provenance', models.TextField(blank=True, null=True)),
                ('creation_dates', models.TextField(blank=True, null=True)),
                ('start_date', models.DateField()),
                ('end_date', models.DateField(blank=True, null=True)),
                ('description', models.TextField(blank=True, null=True)),
                ('notes', models.TextField(blank=True, null=True)),
                ('extent', models.TextField()),
                ('related_materials', models.TextField(blank=True, null=True)),
                ('rights_declaration', models.TextField()),
                ('physical_description', models.TextField(blank=True, null=True)),
                ('copyright_status', models.TextField()),
                ('publication_permission', models.TextField(blank=True, null=True)),
                ('whithheld', models.TextField(blank=True, null=True)),
                ('url', models.URLField(blank=True, null=True)),
            ],
            options={
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='Language',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
            ],
        ),
        migrations.CreateModel(
            name='Organisation',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
            ],
        ),
        migrations.CreateModel(
            name='Person',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
            ],
        ),
        migrations.CreateModel(
            name='Place',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
            ],
        ),
        migrations.CreateModel(
            name='Publication',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('title', models.TextField(unique=True)),
            ],
        ),
        migrations.CreateModel(
            name='PublicationStatus',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('title', models.CharField(max_length=32, unique=True)),
            ],
        ),
        migrations.CreateModel(
            name='RecordType',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('title', models.CharField(max_length=128, unique=True)),
            ],
        ),
        migrations.CreateModel(
            name='Reference',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('title', models.CharField(max_length=128)),
                ('unitid', models.CharField(max_length=128)),
            ],
        ),
        migrations.CreateModel(
            name='RevisionEvent',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('title', models.CharField(max_length=128, unique=True)),
            ],
        ),
        migrations.CreateModel(
            name='RevisionMetadata',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('editor_type', models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, to='auth.Group')),
                ('event_type', models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, to='archival.RevisionEvent')),
                ('revision', models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, to='reversion.Revision')),
            ],
        ),
        migrations.CreateModel(
            name='Series',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('repository', models.CharField(max_length=512)),
                ('repository_code', models.PositiveIntegerField()),
                ('archival_level', models.CharField(editable=False, max_length=32)),
                ('title', models.CharField(max_length=1024)),
                ('provenance', models.TextField(blank=True, null=True)),
                ('creation_dates', models.TextField(blank=True, null=True)),
                ('start_date', models.DateField()),
                ('end_date', models.DateField(blank=True, null=True)),
                ('description', models.TextField(blank=True, null=True)),
                ('notes', models.TextField(blank=True, null=True)),
                ('extent', models.TextField()),
                ('related_materials', models.TextField(blank=True, null=True)),
                ('rights_declaration', models.TextField()),
                ('arrangement', models.TextField()),
                ('language', models.ManyToManyField(to='archival.Language')),
                ('organisations', models.ManyToManyField(to='archival.Organisation')),
                ('parent', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='archival.Series')),
                ('persons', models.ManyToManyField(to='archival.Person')),
                ('places', models.ManyToManyField(to='archival.Place')),
                ('publication_status', models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, to='archival.PublicationStatus')),
                ('publications', models.ManyToManyField(to='jargon.Publication')),
                ('references', models.ManyToManyField(to='archival.Reference')),
            ],
            options={
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='Subject',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
            ],
        ),
        migrations.AddField(
            model_name='series',
            name='subjects',
            field=models.ManyToManyField(to='archival.Subject'),
        ),
        migrations.AddField(
            model_name='item',
            name='language',
            field=models.ManyToManyField(to='archival.Language'),
        ),
        migrations.AddField(
            model_name='item',
            name='organisations',
            field=models.ManyToManyField(to='archival.Organisation'),
        ),
        migrations.AddField(
            model_name='item',
            name='persons',
            field=models.ManyToManyField(to='archival.Person'),
        ),
        migrations.AddField(
            model_name='item',
            name='places',
            field=models.ManyToManyField(to='archival.Place'),
        ),
        migrations.AddField(
            model_name='item',
            name='publication_status',
            field=models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, to='archival.PublicationStatus'),
        ),
        migrations.AddField(
            model_name='item',
            name='publications',
            field=models.ManyToManyField(to='jargon.Publication'),
        ),
        migrations.AddField(
            model_name='item',
            name='record_type',
            field=models.ManyToManyField(to='archival.RecordType'),
        ),
        migrations.AddField(
            model_name='item',
            name='references',
            field=models.ManyToManyField(to='archival.Reference'),
        ),
        migrations.AddField(
            model_name='item',
            name='subjects',
            field=models.ManyToManyField(to='archival.Subject'),
        ),
        migrations.AddField(
            model_name='file',
            name='language',
            field=models.ManyToManyField(to='archival.Language'),
        ),
        migrations.AddField(
            model_name='file',
            name='organisations',
            field=models.ManyToManyField(to='archival.Organisation'),
        ),
        migrations.AddField(
            model_name='file',
            name='parent',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='archival.File'),
        ),
        migrations.AddField(
            model_name='file',
            name='persons',
            field=models.ManyToManyField(to='archival.Person'),
        ),
        migrations.AddField(
            model_name='file',
            name='places',
            field=models.ManyToManyField(to='archival.Place'),
        ),
        migrations.AddField(
            model_name='file',
            name='publication_status',
            field=models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, to='archival.PublicationStatus'),
        ),
        migrations.AddField(
            model_name='file',
            name='publications',
            field=models.ManyToManyField(to='jargon.Publication'),
        ),
        migrations.AddField(
            model_name='file',
            name='record_type',
            field=models.ManyToManyField(to='archival.RecordType'),
        ),
        migrations.AddField(
            model_name='file',
            name='references',
            field=models.ManyToManyField(to='archival.Reference'),
        ),
        migrations.AddField(
            model_name='file',
            name='subjects',
            field=models.ManyToManyField(to='archival.Subject'),
        ),
        migrations.AddField(
            model_name='collection',
            name='language',
            field=models.ManyToManyField(to='archival.Language'),
        ),
        migrations.AddField(
            model_name='collection',
            name='organisations',
            field=models.ManyToManyField(to='archival.Organisation'),
        ),
        migrations.AddField(
            model_name='collection',
            name='persons',
            field=models.ManyToManyField(to='archival.Person'),
        ),
        migrations.AddField(
            model_name='collection',
            name='places',
            field=models.ManyToManyField(to='archival.Place'),
        ),
        migrations.AddField(
            model_name='collection',
            name='publication_status',
            field=models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, to='archival.PublicationStatus'),
        ),
        migrations.AddField(
            model_name='collection',
            name='references',
            field=models.ManyToManyField(to='archival.Reference'),
        ),
        migrations.AddField(
            model_name='collection',
            name='subjects',
            field=models.ManyToManyField(to='archival.Subject'),
        ),
    ]
